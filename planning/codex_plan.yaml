tasks:
  - id: PL6  
    group: "planner-interface"  
    description: "Enhance Planner task specs to ensure every module prompt is sufficiently detailed (while still compartmentalized). In particular, include concrete parameters or quantitative constraints for each task where applicable, per the concept deconstruction guidelines."  
    acceptance_criteria:  
      - "Each planned task description includes at least one specific technical detail (e.g. a numeric requirement, a standard/code reference, or a performance target) relevant to that module, provided in the inputs, outputs, or constraints fields."  
      - "No task descriptions are overly generic. Tasks should not consist solely of vague phrases like 'the project' or 'the module' without additional context. All tasks must be phrased in functional terms with clear module-specific goals (per guidelines):contentReference[oaicite:49]{index=49}."  
      - "Add a unit test (e.g. `test_planner_task_sufficiency`) that feeds a sample multi-faceted idea into the Planner and asserts that each resulting task contains a concrete parameter or constraint. The test should fail if any task comes back with only generic text and no actionable detail."  
    test_coverage: "tests/eval/test_compartmentalization.py::test_planner_task_sufficiency"  
    labels: ["planner", "prompting", "compartmentalization", "sufficiency"]  
