tasks:
- id: PL3
  group: "planner-interface"
  description: "Ensure Planner outputs a complete plan JSON including required metadata (e.g. plan_id, role, summary) so that the schema validation passes."
  acceptance_criteria:
    - "Planner JSON output includes top-level keys (plan_id, role, etc.) as defined in planner_v1.json schema."
    - "Planner output passes schema validation on first attempt without manual fixes."
  test_coverage: "tests/eval/test_compartmentalization.py::test_planner_schema_requires_extended_task_fields"
  labels: ["planner", "schema", "compartmentalization"]

- id: PL4
  group: "planner-interface"
  description: "Refine Planner prompt and logic to eliminate any reference to the overall idea or product name in task titles/descriptions (use neutral terms like 'the system')."
  acceptance_criteria:
    - "No task description or title contains the original project name or specific product term."
    - "Planner obeys the 'do not hint at overall project' rule in generated outputs (verified via search for idea keywords in tasks)."
  test_coverage: "tests/eval/test_compartmentalization.py::test_planner_no_scope_leak"
  labels: ["planner", "prompting", "compartmentalization"]

- id: AG3
  group: "prompt-isolation"
  description: "Compartmentalize the Reflection agent's prompt by removing the global idea context; it should base follow-up tasks only on existing outputs and detected gaps."
  acceptance_criteria:
    - "Reflection agent prompt no longer includes any 'Project Idea' section â€“ it uses only the collated outputs as input."
    - "Follow-up task suggestions are generated solely from analysis of agent outputs and placeholders (idea not visible to Reflection)."
  test_coverage: "tests/eval/test_compartmentalization.py::test_reflection_prompt_isolation"
  labels: ["reflection", "prompts", "compartmentalization"]
  
