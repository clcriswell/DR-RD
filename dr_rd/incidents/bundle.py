"""Incident bundle creation helpers."""
from __future__ import annotations

import json
import shutil
import zipfile
from datetime import datetime
from pathlib import Path
from typing import Tuple

from core.trace_diff import load_run, diff_runs
from core.diagnostics import load_rules, evaluate_diff


def make_incident_bundle(base_path: str | Path, cand_path: str | Path, out_dir: str | Path) -> str:
    """Create an incident bundle and return the zip file path."""
    out = Path(out_dir)
    out.mkdir(parents=True, exist_ok=True)
    ts = datetime.utcnow().strftime("%Y%m%d_%H%M%S")
    bundle_dir = out / f"incident_{ts}"
    bundle_dir.mkdir()

    base_run = load_run(base_path)
    cand_run = load_run(cand_path)
    diff = diff_runs(base_run, cand_run)
    rules = load_rules()
    diag = evaluate_diff(diff, rules)

    # copy raw data
    for label, path in (("base", base_path), ("cand", cand_path)):
        rpath = Path(path)
        shutil.copy(rpath / "run_meta.json", bundle_dir / f"{label}_run_meta.json")
        shutil.copy(rpath / "provenance.jsonl", bundle_dir / f"{label}_provenance.jsonl")

    (bundle_dir / "trace_diff.json").write_text(json.dumps(diff, indent=2))
    (bundle_dir / "diagnostics.json").write_text(json.dumps(diag, indent=2))
    (bundle_dir / "README.md").write_text("Incident bundle generated by tests.")

    zip_path = shutil.make_archive(str(bundle_dir), "zip", root_dir=bundle_dir)
    return zip_path


__all__ = ["make_incident_bundle"]
