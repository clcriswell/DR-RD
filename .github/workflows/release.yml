name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  gate_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          pip install --require-hashes -r requirements.lock.txt
          pip install --require-hashes -r dev-requirements.lock.txt
      - name: Release checklist gate
        run: python scripts/release_check.py

  build:
    needs: gate_release
    runs-on: ubuntu-latest
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Ensure directories
        run: |
          mkdir -p reports dist sbom
      - name: Install dependencies
        run: |
          pip install --require-hashes -r requirements.lock.txt
          pip install --require-hashes -r dev-requirements.lock.txt
      - name: Build artifacts
        run: python scripts/build_artifacts.py
      - name: Generate SBOM
        run: python scripts/gen_sbom.py
      - name: Hash artifacts
        id: hash
        run: |
          echo "hashes=$(sha256sum dist/* | base64 -w0)" >> "$GITHUB_OUTPUT"
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*
      - uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom/*.json

  release_assets:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: sbom
          path: sbom
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            dist/*
            sbom/*.json

  slsa_provenance:
    needs: build
    permissions:
      actions: read
      id-token: write
      contents: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.1.0
    with:
      base64-subjects: ${{ needs.build.outputs.hashes }}
      upload-assets: true
      upload-tag-name: ${{ github.ref_name }}
    secrets: inherit

  cosign_attest:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - uses: sigstore/cosign-installer@v3
      - name: Generate attestations
        env:
          COSIGN_EXPERIMENTAL: "1"
        run: |
          echo '{}' > predicate.json
          for f in dist/*; do
            cosign attest --predicate predicate.json --type https://slsa.dev/provenance/v1 --no-upload "$f" > "$f.intoto"
          done
      - uses: actions/upload-artifact@v4
        with:
          name: cosign-attestations
          path: dist/*.intoto
      - name: Upload attestations to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: dist/*.intoto
