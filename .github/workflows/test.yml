name: tests
on: [push, pull_request]
jobs:
  lint-type-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Compute changed files (robust)
        shell: bash
        env:
          BASE_REF: ${{ github.base_ref }}
          DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
        run: |
          set -euo pipefail
          BASE="${BASE_REF:-$DEFAULT_BRANCH}"
          git fetch --no-tags --prune origin "$BASE"
          echo "Resolved BASE=$BASE"
          echo "HEAD=$(git rev-parse --short HEAD)"
          echo "BASE_TIP=$(git rev-parse --short origin/$BASE || true)"
          if git merge-base --is-ancestor origin/$BASE HEAD 2>/dev/null || git merge-base HEAD origin/$BASE >/dev/null 2>&1; then
            echo "Using triple-dot diff: origin/$BASE...HEAD"
            git diff --name-only "origin/$BASE...HEAD" > changed_files.txt
          else
            echo "No merge base; using two-dot diff: origin/$BASE..HEAD"
            git diff --name-only "origin/$BASE..HEAD" > changed_files.txt
          fi
          echo "Changed files:"
          cat changed_files.txt || true
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install pytest pytest-cov mypy
          pip install isort flake8 bandit
      - name: Install formatting tools
        run: |
          python -m pip install --upgrade pip
          pip install "black==24.8.0"
          black --version
      - name: Black (changed files only)
        shell: bash
        run: |
          set -euo pipefail
          # If changed_files.txt exists and has Python files, check only those.
          if [[ -f changed_files.txt ]]; then
            PY_CHANGED=$(awk '/\.py$/ {print}' changed_files.txt || true)
            if [[ -n "$PY_CHANGED" ]]; then
              echo "$PY_CHANGED" | xargs -r black --check --diff
              exit 0
            else
              echo "No changed .py files; skipping Black check."
              exit 0
            fi
          fi
          # Fallback when changed_files.txt is missing: check the whole repo.
          echo "changed_files.txt missing; running Black on repository."
          black --check .
      - name: Lint
        run: |
          isort --check-only .
          flake8 .
          bandit -q -r core utils app orchestrators planning plugins
      - name: Typecheck
        run: mypy --ignore-missing-imports core app utils orchestrators planning || true
      - name: Tests with coverage
        run: pytest -q --cov=core --cov=app --cov=utils --cov-report=term-missing --cov-report=xml
      - name: Enforce coverage floor
        run: |
          python - <<'PY'
          import xml.etree.ElementTree as ET
          cov = float(ET.parse('coverage.xml').getroot().attrib['line-rate'])
          assert cov >= 0.80, f"Coverage {cov*100:.1f}% < 80%"
          PY
      - name: Upload audits/final artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: audits-and-final
          path: |
            audits/**/*
            **/final_bundle.zip
          if-no-files-found: ignore
